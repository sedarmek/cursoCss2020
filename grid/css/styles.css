/*
GRID
grid-template-columns: sirve para declara el tamanio y el numero de columnas
grid-template-rows: sirve para declara el tamanio y el numero de filas
grid-column-grap: sirve para declarar la separacion entre las columnas
grid-row-grap: sirve para declarar la separacion entre las filas

grid-column: shorthand de indica la line-column de inicio y del final de cada elemento.
grid-row: shorthand de indica la line-row de inicio y del final de cada elemento hijo.

valor fr y auto para asignar un tamano a los hijos.
fr: indica las divisiones que recibira cada elemento hijo
auto: genera el tamanio minimo de acuerdo al contenido del elemento hijo

repeat(x, y z): repite un patron de medidas, donde X es el numero de repeticiones, e Y Z son medidas del patron.

Explicid grid: es el grid que declaramos (
    grid-template-columns | grid-template-rows
    ).

implicid grid: es el grid que no declaramos.
    grid-auto-columns: establece que hacer con las columnas no definidas.
    grid-auto-rows: estable que hacer con las filas no definidas.
    gris-auto-flow: establece la direccion en la cual se pinta el implicid grid

        row: se crearan filas adicionales
        column: se crearan columnas adicionales
        dense: establece que hacer con los huecos que deden

*/

*{
    padding: 0px;
    margin: 0px;
    text-align: center;
    box-sizing: border-box;
}
body{
    display:flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.container-father{
    display: flex;
    justify-content: center;
    align-items: center;
}
/*Parte 1*/
.container{
    background-color: aquamarine;
    margin: 10px;
    padding: 10px;
    display: grid;
    grid-template-columns: 50px 30px 70px 20px;
    grid-template-rows: 30px 80px 50px;
    grid-column-gap: 10px;
    grid-row-gap: 10px;
}
.children{
    background-color: cadetblue;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid grey;
}
/*Parte 2*/
.container-2{
    background-color: #8c77a0;
    margin: 10px;
    padding: 10px;
    display: grid;
    grid-template-columns: 50px 50px 50px 50px;
    grid-template-rows: 50px 50px 50px 50px;
    grid-gap: 5px;
}
.children-2{
    background-color: #4b286b;
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
}
.children-2:first-child{
    background-color: pink;
    /* grid-column-start: 2;
    grid-column-end: 3; 
    grid-row-start: 1;
    grid-row-end: 2;*/
    grid-column: 2 / 3;
    grid-row: 1 / 2;
}
.children-2:nth-child(3){
    background-color: orange;
    grid-column: 3 / 4;
    grid-row: 1 / 3;
}
.children-2:nth-child(4){
    background-color: orange;
    grid-column: 1 / 2;
    grid-row: 1 / 2;
}
.children-2:nth-child(2){
    background-color: pink;
    grid-column: 1 / 3;
    grid-row: 2 / 4;
}
/*Parte 3*/
.container-3{
    background-color: #5a5aaf;
    margin: 15px;
    padding: 5px;
    display: grid;
    grid-template-columns: 150px repeat(2, 1fr 5fr);
    grid-template-rows: 45px 1fr 2fr auto;
    grid-column-gap: 5px;
    grid-row-gap: 10px;
}
.children-3{
    background-color: #8282d8;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid grey;
}
/*implicid grid*/
.container-4{
    background-color: pink;
    margin: 15px;
    padding: 5px;
    display: grid;
    grid-template-columns: repeat(5,55px);
    grid-template-rows: repeat(2, 40px);
    grid-auto-columns: 30px;
    grid-auto-rows: 10px;/*<---no toma el valor por que tiene prioridad el "grid-template-rows" por el 'grid-auto-flow:column'.*/
    grid-auto-flow: column;
}
.children-4{
    background-color: plum;
    border: 1px solid grey;
    margin: 2px;
    display: flex;
    justify-content: center;
    align-items: center;
}