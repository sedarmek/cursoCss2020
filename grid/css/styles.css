/*
GRID

PARTE 1: Medidas de items
grid: shorthand que engloba las propiedades grid(no tiene soporte total,no se suele usar)
grid-template:  shorthand que engloba grid-template-columns,grid-template-rows y grid-template-areas
"header header header" 100px
"aside section section" 500px
"footer footer footer" 80px /
repeat(3,1fr);
    grid-template-columns: sirve para declara el tamanio y el numero de columnas explicitamente, ademas de las lineas de columna.
    grid-template-rows: sirve para declara el tamanio y el numero de filas explicitamente, ademas de las lineas de fila.
    grid-auto-columns: establece que hacer con las columnas no definidas implicitamente.
    grid-auto-rows: estable que hacer con las filas no definidas implicitamente.
    
    Valores para tamaños
    fr: indica las divisiones que recibira cada elemento hijo
    auto: genera el tamanio minimo de acuerdo al contenido del elemento hijo
    min-content: minimo necesario en funcion del contenido
    max-content: maximo necesario en funcion del contenido
    auto-fill: crea tantos grid-items vacios quepan en el viewport respetando la medida.
    auto-fit: elimina los grid-items vacios que no se esten ocupando.
    repeat(x, y z): repite un patron de medidas, donde X es el numero de repeticiones, e Y Z son medidas del patron.
    minmax(): recibe dos parametros, el minimo y maximo que pueden tener los items
    fit-content(): 
    
    PARTE 2: Medidas de separaciones y Nombre de lineas
    gri-gap: shorthand.
    grid-column-gap: sirve para declarar la separacion entre las columnas
    grid-row-gap: sirve para declarar la separacion entre las filas
    
    grid-column: shorthand que indica la line-column de inicio y del final de cada elemento.
    grid-column-start: especifica la posición inicial de un elemento tomando como referencia la line-column.
    grid-column-end: especifica la posición final de un elemento tomando como referencia la line-column.
    grid-row: shorthand que indica la line-row de inicio y del final de cada elemento hijo.
    grid-row-start: especifica la posición inicial de un elemento tomando como referencia la line-row.
    grid-row-end: especifica la posición final de un elemento tomando como referencia la line-row.
    
PARTE 3: Direccion de flujo
        grid-auto-flow: establece la direccion en la cual se pinta el implicid grid
            row: se crearan filas adicionales
            column: se crearan columnas adicionales
            dense: establece que hacer con los huecos que deden

PARTE 4: Alineamiento
        place-items: align-items justify-items
            justify-items: alinea los elementos horizontalmente respecto a la celda.
            align-items: alinea los elementos verticalmente respecto a la celda.

        place-content: align-content justify-content
            justify-content: alinea los elementos horizontalmente respecto al contenedor.
            align-content: alinea los elemetos verticalmente respecto al contenedor.

        place-self
            justify-self
            align-self

        order: 0
    
*/

/*Parte 1*/
.container-ej{
    justify-content: center;
    align-content: center;
}
.container-grid-1{
    background-color: #0000ff1f;
    margin: 1em;
    padding: 0.5em;
    display: grid;
    justify-content: center;
    align-content: center;
    grid-template: 
    "a1 a2 a3" 1fr
    "a4 a5 ." 2fr
    /1fr 2fr 3fr;
    grid-auto-flow: row wrap;
    grid-auto-columns: 1fr;
    grid-auto-rows: 1fr;
}
[class^=item-grid]{
    background-color: #ff00004b;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 0.2em solid #857474b6;
}
.item-grid-1{
    grid-area: "a1";
}
.item-grid-2{
    grid-area: "a2";
}
.item-grid-3{
    grid-area: "a3";
}
.item-grid-4{
    grid-area: "a4";
}
.item-grid-5{
    grid-area: "a5";
}
/*Parte 2*/
.container-grid-2{
    background-color: #0000ff1f;
    margin: 1em;
    padding: 0.5em;
    margin: 1em;
    padding: 0.5em;
    display: grid;
    grid-gap: 0.5em 1em;
    grid-template: 1fr 2fr / 1fr 2fr 3fr 2fr;
}
.item-grid-2-1{
    grid-column: 1/2;
    grid-row: 1/3;
}
.item-grid-2-2{
    grid-column: 2/5;
    grid-row: 1/2;
}
.item-grid-2-3{
    grid-column: 2/3;
    grid-row: 2/3;
}
.item-grid-2-4{
    grid-column: 3/4;
    grid-row: 2/3;
}
.item-grid-2-5{
    grid-column: 4/5;
    grid-row: 2/3;
}
/*Parte 3*/
.container-grid-3{
    background-color: #0000ff1f;
    margin: 1em;
    padding: 0.5em;
    display: grid;
    grid-auto-flow: row;
    justify-content:left;
    align-content: flex-end;
    grid-template: 1fr 2fr / 1fr 2fr 3fr;
}
.item-grid-3-3{
    background-color: #39927494;
    order: -1;
}