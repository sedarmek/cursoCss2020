/*
LISTAS
    Resetar estilos por defecto de una lista
        margin-top:0
        margin-bottom:0
        margin-left:0

    Hay 3 propiedades para las listas, se puede aplicar al padre o a los elementos de lista:
        ul | ol | dl

    list-style-type: establece el estilo de viñeta
        disc
        circle
        square
        decimal
        decimal-leading-zero
        lower-roman
        upper-roman
        lower-greek
        lowwer-latin
        upprt-latin
        armenian
        georgian
        lower-alpha
        upper-alpha

    list-style-position: hace que las viñetas se coloquen por dentro o por fuera del elemento
        inside | outside

    list-style-image: pone una imagen en lugar de la viñeta, no se suele usar
        url(image)

    *Normalmente se suele usar el shorthand list-style.

TABLAS
    table-layout: define como se comportan las dimensiones de una tabla y los anchos por defecto.
    tabla y los anchos de las columnas
        automatic: valor por defecto
        fixed: necesita un width declarado, si no se le da un ancho a cada columna se distribuye equitativamente

    caption-side: define donde se coloca el caption de una tabla
        top: valor por defecto
        bottom: se coloca al pie de la tabla

    border-spacing: controla el espacio entre las celdas

    border-collapse: controla si las celdas se mantienen juntas o separadas
        separate: valor por defecto
        collapse: junta las celdas

    empty-cells: controla que hacer con las celdas vacias
        show: valor por defecto
        hide: oculta las celdas vacias

IMAGENES
    No existen propiedades para imagenes en CSS
    1.Imagenes responsive ---> img{max-width: 100%}

    2.Las imagenes por defecto son elementos inline, esto causa un espacio por debajo debido a su line-height, se puede solucionar de dos maneras:
        line-height:0 | display: block.

    3.Centrado horizontal
        en elementos inline ---> text-align: center
        en elementos bloque ---> margenes laterales automaticos
    
    4. Centrado vertical
        Flexbox
        vertical-align: middle. A la imagen y al texto

    object-fit: se usa para especificar como se debe cambiar el tamaño de la imagen o video para que se ajuste a su contenedor.
        fill: valor por defecto.Deforma la imagen para que ocupe todo el contenedor.
        contain: el contenido se ajustara hasta rellenar de forma horizontal o vertical el contenedor sin deformarse.Muestra la imagen completa, pero se encoge.
        cover: el contenido se ajustara hasta rellenar de forma horizontal y vertical el contenedor sin deformarse.Solo muestra una parte de la imagen ya que se agranda.
        none: el contenido no se redimensiona y mantiene su tamaño original mostrando solo el trozo de las dimensiones especificadas.
        scale-down: selecciona el menor de la comparacion entre none y contain.

    object-position: coloca la imagen cuando esta no se muestra completa en el contener.

    filter:
        none
        blur(px): desenfoque
        brightness(%): brillo. De 0 a 1 oscuridad y mayor a 1 sobreexposicion.
        contrast(%): contraste. De 0 es negro y de 1 da mas contraste.
        drop-shadow(h-shadow v-shadow blur spread color): sombra.
        grayscale(%): 0 es el original y 1 es blanco y negro.
        hue-rotate(deg): añade matriz de color segun la rueda cromatica.
        invert(%): invierte el color. 0 es el original y 1 es invertido completamente.
        opacity(%): opacidad. 1 es el original y 0 es transparente.
        saturate(%): saturacion. 1 es el original, 0 es desaturada y mayor a 1 es sobresaturada.
        sepia(%): 0 es el original y 1 es totalmente sepia.

    clip-path: es una mascara que oculta partes de una caja.
        circle(diametro at posX posY|palabras clave): dibuja un circulo.

        ellipse(): dibuja una elipse, podemos especificar dos centros.

        inset(all round 1px): dibuja un border transparente por dentro de la caja, existe la opcion de redondear las esquinas con la palabra clave round.

        polygon(): especifica una serie de puntos para definir la zona visible siendo el punto 0 0 la esquina superior izquierda.
        Generador de clip-path: https://bennettfeely.com/clippy/
*/
/*LISTA*/
.container-ej{
    display: flex;
    justify-content: center;
    align-content: center;
}
.list-item-image{
    border: 1px solid grey;
    width: 6em;
    list-style-position: inside;
    list-style-image:url(../source/image/arrows.png);
}
.list-item-geek{
    border: 1px solid grey;
    width: 6em;
    list-style-type: lower-greek;
    list-style-position: outside;
}

/*OTRA MANERA DE CAMBIAR LA VIÑETA SIN LIST-STYLE-IMAGE
.item::before{
    content: '';
    display: inline-block;
    width: 20px;
    height: 15px;
    background-image: url(https://img2.freepng.es/20180203/hfe/kisspng-arrow-icon-right-arrow-png-image-5a7589d14c14c7.5020417515176524333116.jpg);
    background-position: 0 0;
    background-size: cover;
    background-repeat: no-repeat;
} */

/*TABLE*/
.container-ej{
    overflow-x: auto;
}
.table{
    background-color: plum;
    width: 100%;
    table-layout: fixed;
    text-align: center;
    border-spacing: 2em 1em;
    border-collapse: separate;
    empty-cells: hide;
}
.caption{
    background-color: pink;
    caption-side: bottom;
}
.tData{
    background-color: rebeccapurple;
}
/*IMAGENES*/
.img-container{
    background-color: red;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 15px;
    width: 200px;
    /* line-height: 0px;
    text-align: center; */
    display: flex;
    align-items: center;
    
}
.img{
    max-width: 100%;
    display: block;
}

.img-2{
    background-color: red;
    width: 80px;
    height: 150px;
    object-fit: cover;
    object-position: center;
    filter: sepia(0);
}
/*Clip-path*/
.cont-path{
    background-color: rgb(81, 100, 94);
    width: 150px;
    height: 150px;
    margin: 10px;
}
.path{
    background-color: grey;
    width: 150px;
    height: 150px;
    /* clip-path: circle(50px at left top); */
    /* clip-path: ellipse(50px 25px at 65% 30%); */
    /* clip-path: inset(15px 30px 45px 60px round 10px 20px 30px 50px); */
    clip-path: polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%);
}
.cont-path > .path:hover{
    clip-path: polygon(41% 54%, 10% 74%, 14% 10%, 81% 12%, 60% 37%, 92% 70%, 72% 84%);
    transition: clip-path 1s;
}